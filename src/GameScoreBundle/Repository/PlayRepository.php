<?php

namespace GameScoreBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter;
use PDO;

/**
 * PlayRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlayRepository extends EntityRepository
{

    public function getMostPlayedGamesByPlayer($player_id, $limit)
    {
        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare("
            SELECT COUNT(p.id) AS nbplays, g.name AS gamename
            FROM play p 
                INNER JOIN game g ON (g.id = p.game_id)
                INNER JOIN score s ON (s.play_id = p.id)
            WHERE s.player_id = :player_id
            GROUP BY p.game_id
            ORDER BY nbplays DESC
            LIMIT :limit"
        );
        $statement->bindValue('player_id', $player_id);
        $statement->bindValue('limit', (int)trim($limit), PDO::PARAM_INT);
        $statement->execute();
        $results = $statement->fetchAll();

        return $results;
    }

    // retun array of play id
    public function getPlaysByPlayer($player_id, $limit, $nbPerPage = 0)
    {
        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare("
            SELECT play.id
            FROM play
              INNER JOIN score scoreplayer ON (scoreplayer.play_id = play.id)
              INNER JOIN player ON (player.id = scoreplayer.player_id)
            WHERE scoreplayer.player_id = :player_id
            GROUP BY play.id
            ORDER BY play.date DESC LIMIT :limit, :offset"
        );
        $statement->bindValue('player_id', $player_id);
        $statement->bindValue('limit', (int)trim($limit), PDO::PARAM_INT);
        $statement->bindValue('offset', (int)trim($nbPerPage), PDO::PARAM_INT);
        $statement->execute();
        $results = $statement->fetchAll();

        return $results;
    }

    public function getPlaysByGame($game_id, $limit, $nbPerPage)
    {
        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare("
            SELECT play.id
            FROM play
            WHERE game_id = :game_id
            ORDER BY play.date DESC LIMIT :limit, :offset"
        );
        $statement->bindValue('game_id', $game_id);
        $statement->bindValue('limit', (int)trim($limit), PDO::PARAM_INT);
        $statement->bindValue('offset', (int)trim($nbPerPage), PDO::PARAM_INT);
        $statement->execute();
        $results = $statement->fetchAll();

        return $results;
    }

}
